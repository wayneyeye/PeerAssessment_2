qplot(displ,hwy, data=mpg,geom=c("point","smooth"),facets=.~drv,method="loess")
ggplot(mpg,aes(displ,hwy))
g<-ggplot(mpg,aes(displ,hwy))
g
summary(g)
g+geom_point()
(g + geom_point())+geom_smooth()
g + geom_point()+geom_smooth()
g + geom_point()+geom_smooth("lm")
g + geom_point()+geom_smooth(method="lm")
g + geom_point()+geom_smooth(method="lm")+facet_grid(.~drv)
g + geom_point()+geom_smooth(method="lm")+facet_grid(.~drv)+ggtitle("Swirl Rules!")
g + geom_point(color="pink",size=4,alpha=1/2)
g + geom_point(color=drv,size=4,alpha=1/2)
g + geom_point(aes(color=drv),size=4,alpha=1/2)
g + geom_point(aes(color=drv),size=4,alpha=1/2)+labs(title="Swirl Rules!")+labs(x="Displacement",y="Hwy Mileage")
g + geom_point(aes(color=drv))+labs(title="Swirl Rules!")+labs(x="Displacement",y="Hwy Mileage")
g + geom_point(aes(color=drv),size=2,alpha=1/2)+labs(title="Swirl Rules!")+labs(x="Displacement",y="Hwy Mileage")+geom_smooth(size=4,linetype=3,method="lm")
g + geom_point(aes(color=drv),size=2,alpha=1/2)+labs(title="Swirl Rules!")+labs(x="Displacement",y="Hwy Mileage")+geom_smooth(size=4,linetype=3,method="lm",se=FALSE)
g + geom_point(aes(color=drv),size=2,alpha=1/2)+geom_smooth(size=4,linetype=3,method="lm",se=FALSE)
g+geom_point(aes(color=drv))+theme_bw(base_family = "Times")
plot(myx,myy,type="l",ylim=c(-3,3))
g<-ggplot(testdat,aes(x=myx,y=myy))
g+geom_line()
g+geom_line()+ylim(-3,3)
g+geom_line()+coord_cartesian(ylim=c(-3,3))
g<-ggplot(dataset,aes(x=displ,y=hwy,color=factor(year)))
g<-ggplot(mpg,aes(x=displ,y=hwy,color=factor(year)))
g+geom_point()
g+geom_point()+facet_grid(drv~cyl,margins=T)
g+geom_point()+facet_grid(drv~cyl,margins=TRUE)
g+geom_point()+facet_grid(drv~cyl,margins=TRUE)+geom_smooth(method="lm",se=FALSE,size=2,color="black")
g+geom_point()+facet_grid(drv~cyl,margins=TRUE)+geom_smooth(method="lm",se=FALSE,size=2,color="black")+labs(x="Displacement",y="Highway Mileage",title="Swirl Rules!")
str(diamonds)
qplot(price,data=diamonds)
range(diamonds$price)
qplot(price,data=diamonds,binwidth=18497/30)
brk
counts
qplot(price,data=diamonds,binwidth=18497/30,fill=cut)
qplot(price,data=diamonds,geom="density")
qplot(price,data=diamonds,geom="density",color=cut)
qplot(carat,price,data=diamonds)
qplot(carat,price,data=diamonds,shape=cut)
qplot(carat,price,data=diamonds,shape=cut,color=cut)
qplot(carat,price,data=diamonds,color=cut)
qplot(carat,price,data=diamonds,color=cut,geom=c("point","smooth"),method="lm")
qplot(carat,price,data=diamonds,color=cut,geom=c("point","smooth"),method="lm",facets=c(5,10))
qplot(carat,price,data=diamonds,color=cut,geom=c("point","smooth"),method="lm",facets=.~cut)
g<-ggplot(diamonds,aes(depth,price))
summary(g)
g+geom_point(alpha=1/3)
cutpoints=quantile(diamonds$carat,seq(0,1,length=4),na.rm=TRUE)
Type cutpoints <- quantile(diamonds$carat,seq(0,1,length=4),na.rm=TRUE)
cutpoints <- quantile(diamonds$carat,seq(0,1,length=4),na.rm=TRUE)
cutpoints
diamonds$car2<-cut(diamonds$carat,cutpoints)
g<-ggplot(diamonds,aes(depth,price))
g+geom_point(alpha=1/3)+facet_grid(cut~car2)
diamonds[myd,]
g+geom_point(alpha=1/3)+facet_grid(cut~car2)+geom_smooth(method="lm",size=3,color="pink")
ggplot(diamonds,aes(carat,price))+geom_boxplot()+facet_grid(.~cut)
swirl()
library(swirl)
install_course_github("https://github.com/swirldev/swirl_courses/tree/master/Getting_and_Cleaning_Data")
install_course_github("http://github.com/swirldev/swirl_courses/tree/master/Getting_and_Cleaning_Data")
install_from_swirl("Getting and Cleaning Data")
install_from_swirl("Regression Models")
install_from_swirl("Statistical Inference")
swirl()
mydf<-read.csv(path2csv,stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran<-tbl_df(mydf)
rm("mydf")
cran
?select
select(cran,ip_id,package,country)
5:20
select(cran,r_arch:country)
select(cran,country:r_arch)
cran
select(cran,-time)
-5:20
-(5:20)
select(cran,-(X:size))
filter(cran,package == "swirl")
filter(cran,r_version=="3.1.1",country=="US")
?Comparison
filter(cran,r_version<="3.0.2",country=="IN")
filter(cran,country=="US"|country=="IN")
filter(cran,size>100500&r_os=="linux-gnu")
filter(cran,size>100500 & r_os=="linux-gnu")
filter(cran,size>100500, r_os=="linux-gnu")
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran,!is.na(r_version))
cran2<-select(cran,size:ip_id)
arrange(cran2,ip_id)
arrange(cran2,desc(ip_id))
arrange(cran2,package,ip_id)
arrange(cran2,country,desc(r_version),ip_id)
cran3<-select(cran,ip_id,package,size)
cran3
mutate(cran3,size_mb=size/2^20)
mutate(cran3,size_gb=size_mb/2^20)
mutate(cran3,size_gb=size_mb / 2^20)
cran3
mutate(cran3,size_mb=size/2^20,size_gb=size_mb/2^20)
mutate(cran3,size_mb=size/2^20,size_gb=size_mb/2^10)
mutate(cran3,correct_size=size-1000)
mutate(cran3,correct_size=size+1000)
summarize(cran,avg_bytes=mean(size))
library(dplyr)
cran<-tbl_df(my_df)
cran<-tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package<-group_by(cran,package)
by_package
summarize(by_package,mean(size))
?n
submit()
submit()
swirl()
submit()
rm(list=ls())
library(swirl)
swirl()
library(dplyr)
cran<-tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package<-group_by(cran, package)
by_package
summarise(by_package,mean(size))
submit()
pack_sum
quantile(pack_sum$count,probs=0.99)
top_counts<-filter(pack_sum,count>679)
top_counts
View(top_counts)
top_counts_sorted<-arrange(top_counts,desc(counts))
top_counts_sorted<-arrange(top_counts,desc(count))
View(top_counts_sorted)
uantile(pack_sum$unique, probs=0.99)
quantile(pack_sum$unique, probs=0.99)
top_unique<-filter(pack_sum,unique > 465)
View(top_unique)
top_unique_sorted<-arrange(top_unique,desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
cran %>%
select(ip_id,country,package,size) %>%
print
submit()
submit()
submit()
submit()
submit()
?unzip
setwd("C:/Users/Administrator/Desktop/Coursera/DS_Toolbox/DS_5_Reproducible_R/PeerAssessment_2")
if(!file.exists("./data")){
file.create("./data")
}
dataURL<-"https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2"
download.file(dataURL,"./data/Stormdata.csv.bz2",method = "curl")
unzip(zipfile = "./data/Stormdata.csv.bz2",exdir = "./data/",overwrite = TRUE)
if(!file.exists("./data")){
file.create("./data")
}
dataURL<-"https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2"
download.file(dataURL,"./data/Stormdata.csv.bz2")
unzip(zipfile = "./data/Stormdata.csv.bz2",exdir = "./data/",overwrite = TRUE)
if(!dir.exists("./data")){
dir.create("./data")
}
dataURL<-"https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2"
download.file(dataURL,"./data/Stormdata.csv.bz2")
unzip(zipfile = "./data/Stormdata.csv.bz2",exdir = "./data/",overwrite = TRUE)
unzip(zipfile = "./data/Stormdata.csv.bz2",exdir = "./data",overwrite = TRUE)
unzip(zipfile = "./data/Stormdata.csv.bz2",overwrite = TRUE)
raw_stormdata<-read.csv(bzfile("./data/Stormdata.csv.bz2))
raw_stormdata<-read.csv(bzfile("./data/Stormdata.csv.bz2"))
head(raw_stormdata)
str(raw_stormdata)
my_stormdata<-select(raw_stormdata,EVTYPE,BGN_TIME,STATE,FATALITIES,INJURIES,PROPDMG,CROPDMG)
library(dplyr)
my_stormdata<-select(raw_stormdata,EVTYPE,BGN_TIME,STATE,FATALITIES,INJURIES,PROPDMG,CROPDMG)
head(my_stormdata)
range(my_stormdata$CROPDMG)
my_stormdata<-select(raw_stormdata,EVTYPE,STATE,FATALITIES,INJURIES,PROPDMG,CROPDMG)
table(raw_stormdata$PROPDMGEXP)
table(raw_stormdata$PROPDMG)
my_stormdata<-select(raw_stormdata,EVTYPE,STATE,FATALITIES,INJURIES,PROPDMG,PROPDMGEXP,CROPDMG,CROPDMGEXP)
str(my_stormdata)
head(my_stormdata)
head(my_stormdata,30)
my_stormdata<-select(raw_stormdata,EVTYPE,STATE,FATALITIES,INJURIES,PROPDMG,PROPDMGEXP,CROPDMG,CROPDMGEXP)
head(my_stormdata,30)
str(my_stormdata)
names(raw_stormdata)
table(raw_stormdata$CROPDMGEXP)
my_stormdata<-select(raw_stormdata,EVTYPE,STATE,FATALITIES,INJURIES,PROPDMG,PROPDMGEXP,CROPDMG,CROPDMGEXP)
table(my_stormdata$CROPDMGEXP)
head(my_stormdata,n = 30)
table(my_stormdata$EVTYPE)
my_stormdata<-mutate(my_stormdata,tolower(EVTYPE))
table(my_stormdata$EVTYPE)
names(my_stormdata)
my_stormdata<-select(raw_stormdata,EVTYPE,STATE,FATALITIES,INJURIES,PROPDMG,PROPDMGEXP,CROPDMG,CROPDMGEXP)
my_stormdata<-mutate(my_stormdata,Event_Type=tolower(as.character(EVTYPE)))
names(my_stormdata)
table(my_stormdata$Event_Type)
str(my_stormdata)
my_stormdata<-select(raw_stormdata,EVTYPE,STATE,FATALITIES,INJURIES,PROPDMG,PROPDMGEXP,CROPDMG,CROPDMGEXP)
my_stormdata<-mutate(my_stormdata,Event_Type=as.factor(tolower(as.character(EVTYPE))))
str(my_stormdata)
my_stormdata<-select(raw_stormdata,EVTYPE,STATE,FATALITIES,INJURIES,PROPDMG,PROPDMGEXP,CROPDMG,CROPDMGEXP)
my_stormdata<-mutate(my_stormdata,Event_Type=as.factor(toupper(as.character(EVTYPE))))
str(my_stormdata)
table(my_stormdata$Event_Type)
range(my_stormdata$FATALITIES)
range(my_stormdata$INJURIES)
grouped_stormdata<-group_by(my_stormdata,Event_Type)
names(grouped_stormdata)
summarize(grouped_stormdata,CASUALTIES=sum(FATALITIES+INJURIES))
sum_cas_stormdata<-summarize(grouped_stormdata,CASUALTIES=sum(FATALITIES+INJURIES))
sum_cas_stormdata<-arrange(sum_cas_stormdata,desc(CASUALTIES))
head(sum_cas_stormdata,10)
head(sum_cas_stormdata,20)
?replace
evt_factor_lvl<-levels(my_stormdata$Event_Type)
evt_factor_lvl[which("TSTM WIND",evt_factor_lvl)]<-"THUNDERSTORM WIND"
evt_factor_lvl[which(evt_factor_lvl,"TSTM WIND")]<-"THUNDERSTORM WIND"
?which
evt_factor_lvl<-levels(my_stormdata$Event_Type)
evt_factor_lvl[which(evt_factor_lvl=="TSTM WIND")]<-"THUNDERSTORM WIND"
evt_factor_lvl[which(evt_factor_lvl=="THUNDERSTORM WINDS")]<-"THUNDERSTORM WIND"
evt_factor_lvl[which(evt_factor_lvl=="WILD/FOREST FIRE")]<-"WILDFIRE"
##############################
grouped_stormdata<-group_by(my_stormdata,Event_Type)
sum_cas_stormdata<-summarize(grouped_stormdata,CASUALTIES=sum(FATALITIES+INJURIES))
sum_cas_stormdata<-arrange(sum_cas_stormdata,desc(CASUALTIES))
head(sum_cas_stormdata,20)
levels(my_stormdata$Event_Type)<-evt_factor_lvl
##############################
grouped_stormdata<-group_by(my_stormdata,Event_Type)
sum_cas_stormdata<-summarize(grouped_stormdata,CASUALTIES=sum(FATALITIES+INJURIES))
sum_cas_stormdata<-arrange(sum_cas_stormdata,desc(CASUALTIES))
head(sum_cas_stormdata,20)
evt_factor_lvl<-levels(my_stormdata$Event_Type)
evt_factor_lvl[which(evt_factor_lvl=="TSTM WIND")]<-"THUNDERSTORM WIND"
evt_factor_lvl[which(evt_factor_lvl=="THUNDERSTORM WINDS")]<-"THUNDERSTORM WIND"
evt_factor_lvl[which(evt_factor_lvl=="WILD/FOREST FIRE")]<-"WILDFIRE"
evt_factor_lvl[which(evt_factor_lvl=="RIP CURRENTS")]<-"RIP CURRENT"
levels(my_stormdata$Event_Type)<-evt_factor_lvl
##############################
grouped_stormdata<-group_by(my_stormdata,Event_Type)
sum_cas_stormdata<-summarize(grouped_stormdata,CASUALTIES=sum(FATALITIES+INJURIES))
sum_cas_stormdata<-arrange(sum_cas_stormdata,desc(CASUALTIES))
head(sum_cas_stormdata,20)
barplot(sum_cas_stormdata$CASUALTIES)
barplot(sum_cas_stormdata$CASUALTIES,xlab = sum_cas_stormdata$Event_Type)
barplot(sum_cas_stormdata[1:10,]$CASUALTIES)
title(main = "Top 10 Most Hazardous Events in USA (by Casualty Numbers)",xlab = "Event Type",ylab = "Total Casualty Number")
axis(side=1,labels = sum_cas_stormdata[1:10,]$Event_Type)
axis(side=1,labels = as.character(sum_cas_stormdata[1:10,]$Event_Type))
axis(side=1,at = as.character(sum_cas_stormdata[1:10,]$Event_Type))
barplot(sum_cas_stormdata[1:10,]$CASUALTIES,xaxt="n")
title(main = "Top 10 Most Hazardous Events in USA (by Casualty Numbers)",xlab = "Event Type",ylab = "Total Casualty Number")
axis(side=1,at = as.character(sum_cas_stormdata[1:10,]$Event_Type))
as.character(sum_cas_stormdata[1:10,]$Event_Type)
barplot(sum_cas_stormdata[1:10,]$CASUALTIES,xaxt="n",col="blue",fill="forestgreen")
barplot(sum_cas_stormdata[1:10,]$CASUALTIES,xaxt="n",col="forestgreen")
title(main = "Top 10 Most Hazardous Events in USA (by Casualty Numbers)",xlab = "Event Type",ylab = "Total Casualty Number")
barplot(sum_cas_stormdata[1:10,]$CASUALTIES,col="forestgreen")
title(main = "Top 10 Most Hazardous Events in USA (by Casualty Numbers)",xlab = "Event Type",ylab = "Total Casualty Number")
?barplot
barplot(sum_cas_stormdata[1:10,]$CASUALTIES,col="forestgreen",names.arg =  as.character(sum_cas_stormdata[1:10,]$Event_Type))
title(main = "Top 10 Most Hazardous Events in USA (by Casualty Numbers)",xlab = "Event Type",ylab = "Total Casualty Number")
barplot(sum_cas_stormdata[1:10,]$CASUALTIES,col="forestgreen",names.arg =  as.character(sum_cas_stormdata[1:10,]$Event_Type),las=2)
title(main = "Top 10 Most Hazardous Events in USA (by Casualty Numbers)",xlab = "Event Type",ylab = "Total Casualty Number")
barplot(sum_cas_stormdata[1:10,]$CASUALTIES,col="forestgreen",names.arg =  as.character(sum_cas_stormdata[1:10,]$Event_Type),las=2,ylim=c(0:10000))
barplot(sum_cas_stormdata[1:10,]$CASUALTIES,col="forestgreen",names.arg =  as.character(sum_cas_stormdata[1:10,]$Event_Type),las=2,ylim=c(0,10000))
barplot(sum_cas_stormdata[1:10,]$CASUALTIES,col="forestgreen",names.arg =  as.character(sum_cas_stormdata[1:10,]$Event_Type),las=2,ylim=c(0,100000))
title(main = "Top 10 Most Hazardous Events in USA (by Casualty Numbers)",xlab = "Event Type",ylab = "Total Casualty Number")
barplot(sum_cas_stormdata[1:10,]$CASUALTIES,col="forestgreen",names.arg =  as.character(sum_cas_stormdata[1:10,]$Event_Type),las=2,ylim=c(0,100000))
title(main = "Top 10 Most Hazardous Events in USA (by Casualty Numbers)",ylab = "Total Casualty Number")
barplot(sum_cas_stormdata[1:10,]$CASUALTIES,col="forestgreen",yaxt="n",names.arg =  as.character(sum_cas_stormdata[1:10,]$Event_Type),las=2,ylim=c(0,100000))
sum_cas_stormdata<-mutate(sum_cas_stormdata,CASUALTIES_K=CASUALTIES/1000)
barplot(sum_cas_stormdata[1:10,]$CASUALTIES,col="forestgreen",yaxt="n",names.arg =  as.character(sum_cas_stormdata[1:10,]$Event_Type),las=2,ylim=c(0,100000))
barplot(sum_cas_stormdata[1:10,]$CASUALTIES,col="forestgreen",names.arg =  as.character(sum_cas_stormdata[1:10,]$Event_Type),las=2,ylim=c(0,100000))
barplot(sum_cas_stormdata[1:10,]$CASUALTIES_K,col="forestgreen",names.arg =  as.character(sum_cas_stormdata[1:10,]$Event_Type),las=2,ylim=c(0,100))
title(main = "Top 10 Most Hazardous Events in USA (by Casualty Numbers)",ylab = "Total Casualty Number (Thousand)")
grouped_stormdata<-group_by(my_stormdata,Event_Type)
sum_cas_stormdata<-summarize(grouped_stormdata,CASUALTIES=sum(FATALITIES+INJURIES),TOTAL_FATALITIES=sum(FATALITIES))
sum_cas_stormdata<-arrange(sum_cas_stormdata,desc(CASUALTIES))
sum_cas_stormdata<-mutate(sum_cas_stormdata,CASUALTIES_K=CASUALTIES/1000,TOTAL_FATALITIES_K=TOTAL_FATALITIES/1000)
sum_cas_stormdata<-mutate(sum_cas_stormdata,CASUALTIES_K=CASUALTIES/1000,TOTAL_FATALITIES_K=TOTAL_FATALITIES/1000)
grouped_stormdata<-group_by(my_stormdata,Event_Type)
sum_cas_stormdata<-summarize(grouped_stormdata,CASUALTIES=sum(FATALITIES+INJURIES),TOTAL_FATALITIES=sum(FATALITIES))
sum_cas_stormdata<-arrange(sum_cas_stormdata,desc(CASUALTIES))
sum_cas_stormdata<-mutate(sum_cas_stormdata,CASUALTIES_K=CASUALTIES/1000,TOTAL_FATALITIES_K=TOTAL_FATALITIES/1000)
my_cas_barplot_data<-rbind(sum_cas_stormdata[1:10,]$TOTAL_FATALITIES_K,sum_cas_stormdata[1:10,]$CASUALTIES)
names(my_cas_barplot_data)<-as.character(sum_cas_stormdata[1:10,]$Event_Type)
barplot(my_cas_barplot_data,col="forestgreen",las=2,ylim=c(0,100))
barplot(my_cas_barplot_data,col=c("red","forestgreen"),las=2,ylim=c(0,100))
title(main = "Top 10 Most Hazardous Events in USA (by Casualty Numbers)",ylab = "Total Casualty Number (Thousand)")
my_cas_barplot_data<-rbind(sum_cas_stormdata[1:10,]$TOTAL_FATALITIES_K,sum_cas_stormdata[1:10,]$CASUALTIES_K)
names(my_cas_barplot_data)<-as.character(sum_cas_stormdata[1:10,]$Event_Type)
barplot(my_cas_barplot_data,col=c("red","forestgreen"),las=2,ylim=c(0,100))
title(main = "Top 10 Most Hazardous Events in USA (by Casualty Numbers)",ylab = "Total Casualty Number (Thousand)")
barplot(my_cas_barplot_data,col=c("red","forestgreen"),names.arg = as.character(sum_cas_stormdata[1:10,]$Event_Type),las=2,ylim=c(0,100))
title(main = "Top 10 Most Hazardous Events in USA (by Casualty Numbers)",ylab = "Total Casualty Number (Thousand)")
legend("topright",c("Fatalities","Fatalities+Injuries")
legend("topright",c("Fatalities","Fatalities+Injuries"))
legend("topright",c("Fatalities","Fatalities+Injuries"),fill=c("red","forestgreen"))
grouped_stormdata<-group_by(my_stormdata,Event_Type)
sum_cas_stormdata<-summarize(grouped_stormdata,CASUALTIES=sum(FATALITIES+INJURIES),TOTAL_INJURIES=sum(INJURIES),TOTAL_FATALITIES=sum(FATALITIES))
sum_cas_stormdata<-arrange(sum_cas_stormdata,desc(CASUALTIES))
sum_cas_stormdata<-mutate(sum_cas_stormdata,CASUALTIES_K=CASUALTIES/1000,TOTAL_FATALITIES_K=TOTAL_FATALITIES/1000,TOTAL_INJURIES_K=TOTAL_INJURIES/1000)
my_cas_barplot_data<-rbind(sum_cas_stormdata[1:10,]$TOTAL_FATALITIES_K,sum_cas_stormdata[1:10,]$TOTAL_INJURIES_K)
names(my_cas_barplot_data)<-as.character(sum_cas_stormdata[1:10,]$Event_Type)
barplot(my_cas_barplot_data,col=c("red","forestgreen"),names.arg = as.character(sum_cas_stormdata[1:10,]$Event_Type),las=2,ylim=c(0,100),cex.names=0.6)
barplot(my_cas_barplot_data,col=c("red","forestgreen"),names.arg = as.character(sum_cas_stormdata[1:10,]$Event_Type),las=2,ylim=c(0,100),cex.names=0.3)
barplot(my_cas_barplot_data,col=c("red","forestgreen"),names.arg = as.character(sum_cas_stormdata[1:10,]$Event_Type),las=2,ylim=c(0,100),cex.names=0.5)
barplot(my_cas_barplot_data,col=c("red","forestgreen"),names.arg = as.character(sum_cas_stormdata[1:10,]$Event_Type),las=2,ylim=c(0,100),cex.names=0.8)
par(mar=c(3,1,1,1))
barplot(my_cas_barplot_data,col=c("red","forestgreen"),names.arg = as.character(sum_cas_stormdata[1:10,]$Event_Type),las=2,ylim=c(0,100),cex.names=0.8)
title(main = "Top 10 Most Hazardous Events in USA (by Total Casualty Numbers)",ylab = "Total Casualty Number (Thousand)")
legend("topright",c("Fatalities","Injuries"),fill=c("red","forestgreen"))
if(!file.exists("./data/Stormdata.csv.bz2")){
par(mar=c(3,3,3,3))
barplot(my_cas_barplot_data,col=c("red","forestgreen"),names.arg = as.character(sum_cas_stormdata[1:10,]$Event_Type),las=2,ylim=c(0,100),cex.names=0.8)
title(main = "Top 10 Most Hazardous Events in USA (by Total Casualty Numbers)",ylab = "Total Casualty Number (Thousand)")
legend("topright",c("Fatalities","Injuries"),fill=c("red","forestgreen"))
par(mar=c(6,3,3,3))
barplot(my_cas_barplot_data,col=c("red","forestgreen"),names.arg = as.character(sum_cas_stormdata[1:10,]$Event_Type),las=2,ylim=c(0,100),cex.names=0.8)
title(main = "Top 10 Most Hazardous Events in USA (by Total Casualty Numbers)",ylab = "Total Casualty Number (Thousand)")
legend("topright",c("Fatalities","Injuries"),fill=c("red","forestgreen"))
par(mar=c(6,5,5,5))
barplot(my_cas_barplot_data,col=c("red","forestgreen"),names.arg = as.character(sum_cas_stormdata[1:10,]$Event_Type),las=2,ylim=c(0,100),cex.names=0.8)
title(main = "Top 10 Most Hazardous Events in USA (by Total Casualty Numbers)",ylab = "Total Casualty Number (Thousand)")
legend("topright",c("Fatalities","Injuries"),fill=c("red","forestgreen"))
par(mar=c(10,5,5,5))
barplot(my_cas_barplot_data,col=c("red","forestgreen"),names.arg = as.character(sum_cas_stormdata[1:10,]$Event_Type),las=2,ylim=c(0,100),cex.names=0.8)
title(main = "Top 10 Most Hazardous Events in USA (by Total Casualty Numbers)",ylab = "Total Casualty Number (Thousand)")
legend("topright",c("Fatalities","Injuries"),fill=c("red","forestgreen"))
par(mar=c(10,5,5,5))
barplot(my_cas_barplot_data,col=c("red","forestgreen"),names.arg = as.character(sum_cas_stormdata[1:10,]$Event_Type),las=1.5,ylim=c(0,100),cex.names=0.8)
title(main = "Top 10 Most Hazardous Events in USA (by Total Casualty Numbers)",ylab = "Total Casualty Number (Thousand)")
legend("topright",c("Fatalities","Injuries"),fill=c("red","forestgreen"))
par(mar=c(10,5,5,5))
barplot(my_cas_barplot_data,col=c("red","forestgreen"),names.arg = as.character(sum_cas_stormdata[1:10,]$Event_Type),las=2,ylim=c(0,100),cex.names=0.8)
title(main = "Top 10 Most Hazardous Events in USA (by Total Casualty Numbers)",ylab = "Total Casualty Number (Thousand)")
legend("topright",c("Fatalities","Injuries"),fill=c("red","forestgreen"))
##############################
grouped_stormdata<-group_by(my_stormdata,Event_Type)
sum_cas_stormdata<-summarize(grouped_stormdata,CASUALTIES=sum(FATALITIES+INJURIES),TOTAL_INJURIES=sum(INJURIES),TOTAL_FATALITIES=sum(FATALITIES))
sum_cas_stormdata<-arrange(sum_cas_stormdata,desc(CASUALTIES))
sum_cas_stormdata<-mutate(sum_cas_stormdata,CASUALTIES_K=CASUALTIES/1000,TOTAL_FATALITIES_K=TOTAL_FATALITIES/1000,TOTAL_INJURIES_K=TOTAL_INJURIES/1000)
my_cas_barplot_data<-rbind(sum_cas_stormdata[1:10,]$TOTAL_FATALITIES_K,sum_cas_stormdata[1:10,]$TOTAL_INJURIES_K)
names(my_cas_barplot_data)<-as.character(sum_cas_stormdata[1:10,]$Event_Type)
####
select(sum_cas_stormdata[1:10],Event_Type,CASUALTIES,TOTAL_FATALITIES,TOTAL_INJURIES)
####
par(mar=c(10,5,5,5))
barplot(my_cas_barplot_data,col=c("red","forestgreen"),names.arg = as.character(sum_cas_stormdata[1:10,]$Event_Type),las=2,ylim=c(0,100),cex.names=0.8)
title(main = "Top 10 Most Hazardous Events in USA (by Total Casualty Numbers)",ylab = "Total Casualty Number (Thousand)")
legend("topright",c("Fatalities","Injuries"),fill=c("red","forestgreen"))
names(sum_cas_stormdata)
?select
select(sum_cas_stormdata[1:10,],Event_Type,CASUALTIES,TOTAL_FATALITIES,TOTAL_INJURIES,)
sum_cas_stormdata[1:10,]
report_cas_stormdata<-sum_cas_stormdata[1:10,]
select(report_cas_stormdata,Event_Type,CASUALTIES,TOTAL_FATALITIES,TOTAL_INJURIES,)
select(report_cas_stormdata,Event_Type,CASUALTIES,TOTAL_FATALITIES,TOTAL_INJURIES)
?xtabs
install.packages("xtable")
library(xtable)
library(xtable)
report_cas_stormdata<-sum_cas_stormdata[1:10,]
xreport_cas<-xtable(select(report_cas_stormdata,Event_Type,CASUALTIES,TOTAL_FATALITIES,TOTAL_INJURIES))
print.xtable(xreport_cas,type = "html")
head(mmy_stormdata)
head(my_stormdata)
str(my_stormdata)
table(my_stormdata$PROPDMGEXP)
my_stormdata<-mutate(my_stormdata,PropDmgExp=as.factor(toupper(as.character(PROPDMGEXP))))
my_stormdata<-mutate(my_stormdata,CropDmgExp=as.factor(toupper(as.character(CROPDMGEXP))))
table(my_stormdata$PropDmgExp)
prop_fac_lvl<-levels(my_stormdata$PropDmgExp)
prop_fac_lvl[which(prop_fac_lvl!%in% c("B","M","K","H"))]
prop_fac_lvl[which(prop_fac_lvl%in% c("B","M","K","H"))]
prop_fac_lvl[which(!(prop_fac_lvl %in% c("B","M","K","H"))]
prop_fac_lvl %in% c("B","M","K","H")
!prop_fac_lvl %in% c("B","M","K","H")
prop_fac_lvl[which(!prop_fac_lvl %in% c("B","M","K","H")]
prop_fac_lvl[(!prop_fac_lvl %in% c("B","M","K","H")]
prop_fac_lvl[,(!prop_fac_lvl %in% c("B","M","K","H")]
prop_fac_lvl[(prop_fac_lvl %in% c("B","M","K","H")]
prop_fac_lvl[(prop_fac_lvl %in% c("B","M","K","H"),]
prop_fac_lvl[(prop_fac_lvl %in% c("B","M","K","H")]
prop_fac_lvl[prop_fac_lvl %in% c("B","M","K","H")]
prop_fac_lvl[!prop_fac_lvl %in% c("B","M","K","H")]
prop_fac_lvl<-levels(my_stormdata$PropDmgExp)
prop_fac_lvl[!crop_fac_lvl %in% c("B","M","K","H")]<-""
crop_fac_lvl<-levels(my_stormdata$CropDmgExp)
prop_fac_lvl[!prop_fac_lvl %in% c("B","M","K","H")]<-""
crop_fac_lvl<-levels(my_stormdata$CropDmgExp)
crop_fac_lvl[!crop_fac_lvl %in% c("B","M","K","H")]<-""
levels(my_stormdata$PropDmgExp)<- prop_fac_lvl
levels(my_stormdata$CropDmgExp)<- crop_fac_lvl
table(my_stormdata$PropDmgExp)
Exp_vector_K<-c(""=0.001,"H"=0.1,"K"=1,"M"=1000,"B"=1000000)
prop_fac_lvl<-levels(my_stormdata$PropDmgExp)
prop_fac_lvl[!prop_fac_lvl %in% c("B","M","K","H")]<-"N"
crop_fac_lvl<-levels(my_stormdata$CropDmgExp)
crop_fac_lvl[!crop_fac_lvl %in% c("B","M","K","H")]<-"N"
levels(my_stormdata$PropDmgExp)<- prop_fac_lvl
prop_fac_lvl<-levels(my_stormdata$PropDmgExp)
prop_fac_lvl[!prop_fac_lvl %in% c("B","M","K","H")]<-"D"
crop_fac_lvl<-levels(my_stormdata$CropDmgExp)
crop_fac_lvl[!crop_fac_lvl %in% c("B","M","K","H")]<-"D"
levels(my_stormdata$PropDmgExp)<- prop_fac_lvl
levels(my_stormdata$CropDmgExp)<- crop_fac_lvl
Exp_vector_K<-c("D"=0.001,"H"=0.1,"K"=1,"M"=1000,"B"=1000000)
grouped_stormdata<-group_by(my_stormdata,Event_Type)
sum_cas_stormdata<-summarize(grouped_stormdata,CASUALTIES=sum(FATALITIES+INJURIES),TOTAL_INJURIES=sum(INJURIES),TOTAL_FATALITIES=sum(FATALITIES))
sum_cas_stormdata<-arrange(sum_cas_stormdata,desc(CASUALTIES))
sum_cas_stormdata<-mutate(sum_cas_stormdata,CASUALTIES_K=CASUALTIES/1000,TOTAL_FATALITIES_K=TOTAL_FATALITIES/1000,TOTAL_INJURIES_K=TOTAL_INJURIES/1000)
my_cas_barplot_data<-rbind(sum_cas_stormdata[1:10,]$TOTAL_FATALITIES_K,sum_cas_stormdata[1:10,]$TOTAL_INJURIES_K)
names(my_cas_barplot_data)<-as.character(sum_cas_stormdata[1:10,]$Event_Type)
par(mar=c(10,5,5,5))
barplot(my_cas_barplot_data,col=c("red","forestgreen"),names.arg = as.character(sum_cas_stormdata[1:10,]$Event_Type),las=2,ylim=c(0,100),cex.names=0.8)
title(main = "Top 10 Most Hazardous Events in USA (by Total Casualty Numbers)",ylab = "Total Casualty Number (Thousand)")
legend("topright",c("Fatalities","Injuries"),fill=c("red","forestgreen"))
sum_eco_stormdata<-mutate(grouped_stormdata,PROPERTY_LOSS=sum(PROPDMG*Exp_vector_K[PropDmgExp]),CROP_LOSS=sum(CROPDMG*Exp_vector_K[CropDmgExp]))
View(sum_eco_stormdata)
sum_eco_stormdata<-summarize(grouped_stormdata,PROPERTY_LOSS=sum(PROPDMG*Exp_vector_K[PropDmgExp]),CROP_LOSS=sum(CROPDMG*Exp_vector_K[CropDmgExp]))
View(sum_eco_stormdata)
Exp_vector_B<-c("D"=0.001/1000000,"H"=0.1/1000000,"K"=1/1000000,"M"=1/1000,"B"=1)
grouped_stormdata<-group_by(my_stormdata,Event_Type)
sum_cas_stormdata<-summarize(grouped_stormdata,CASUALTIES=sum(FATALITIES+INJURIES),TOTAL_INJURIES=sum(INJURIES),TOTAL_FATALITIES=sum(FATALITIES))
sum_cas_stormdata<-arrange(sum_cas_stormdata,desc(CASUALTIES))
sum_cas_stormdata<-mutate(sum_cas_stormdata,CASUALTIES_K=CASUALTIES/1000,TOTAL_FATALITIES_K=TOTAL_FATALITIES/1000,TOTAL_INJURIES_K=TOTAL_INJURIES/1000)
my_cas_barplot_data<-rbind(sum_cas_stormdata[1:10,]$TOTAL_FATALITIES_K,sum_cas_stormdata[1:10,]$TOTAL_INJURIES_K)
names(my_cas_barplot_data)<-as.character(sum_cas_stormdata[1:10,]$Event_Type)
##############################
sum_eco_stormdata<-summarize(grouped_stormdata,PROPERTY_LOSS=sum(PROPDMG*Exp_vector_B[PropDmgExp]),CROP_LOSS=sum(CROPDMG*Exp_vector_B[CropDmgExp]))
View(sum_eco_stormdata)
sum_eco_stormdata<-mutate(sum_eco_stormdata,PROPERTY_LOSS,CROP_LOSS,TOTAL_LOSS=PROPERTY_LOSS+CROP_LOSS)
View(sum_eco_stormdata)
sum_eco_stormdata<-arrange(sum_eco_stormdata,TOTAL_LOSS)
my_eco_barplot_data<-rbind(sum_eco_stormdata[1:10,]$PROPERTY_LOSS,sum_eco_stormdata[1:10,]$CROP_LOSS)
names(my_eco_barplot_data)<-as.character(sum_eco_stormdata[1:10,]$Event_Type)
par(mar=c(10,5,5,5))
barplot(my_eco_barplot_data,col=c("purple","tomato"),names.arg = as.character(sum_eco_stormdata[1:10,]$Event_Type),las=2,ylim=c(0,500),cex.names=0.8)
barplot(my_eco_barplot_data,col=c("purple","tomato"),names.arg = as.character(sum_eco_stormdata[1:10,]$Event_Type),las=2,ylim=c(0,10),cex.names=0.8)
sum_eco_stormdata<-summarize(grouped_stormdata,PROPERTY_LOSS=sum(PROPDMG*Exp_vector_B[PropDmgExp]),CROP_LOSS=sum(CROPDMG*Exp_vector_B[CropDmgExp]))
sum_eco_stormdata<-mutate(sum_eco_stormdata,PROPERTY_LOSS,CROP_LOSS,TOTAL_LOSS=PROPERTY_LOSS+CROP_LOSS)
sum_eco_stormdata<-arrange(sum_eco_stormdata,desc(TOTAL_LOSS))
my_eco_barplot_data<-rbind(sum_eco_stormdata[1:10,]$PROPERTY_LOSS,sum_eco_stormdata[1:10,]$CROP_LOSS)
names(my_eco_barplot_data)<-as.character(sum_eco_stormdata[1:10,]$Event_Type)
par(mar=c(10,5,5,5))
barplot(my_eco_barplot_data,col=c("purple","tomato"),names.arg = as.character(sum_eco_stormdata[1:10,]$Event_Type),las=2,ylim=c(0,10),cex.names=0.8)
barplot(my_eco_barplot_data,col=c("purple","tomato"),names.arg = as.character(sum_eco_stormdata[1:10,]$Event_Type),las=2,ylim=c(0,500),cex.names=0.8)
barplot(my_eco_barplot_data,col=c("purple","tomato"),names.arg = as.character(sum_eco_stormdata[1:10,]$Event_Type),las=2,ylim=c(0,5000),cex.names=0.8)
barplot(my_eco_barplot_data,col=c("purple","tomato"),names.arg = as.character(sum_eco_stormdata[1:10,]$Event_Type),las=2,ylim=c(0,10000),cex.names=0.8)
barplot(my_eco_barplot_data,col=c("purple","tomato"),names.arg = as.character(sum_eco_stormdata[1:10,]$Event_Type),las=2,ylim=c(0,50000),cex.names=0.8)
barplot(my_eco_barplot_data,col=c("purple","tomato"),names.arg = as.character(sum_eco_stormdata[1:10,]$Event_Type),las=2,ylim=c(0,60000),cex.names=0.8)
title(main = "Top 10 Most Destructive Events in USA (by Total Economic Loss )",ylab = "Economic Loss (Billion Dollars)")
legend("topright",c("Property loss","Crop loss"),fill=c("purple","tomato"))
head(sum_eco_stormdata,10)
sum_eco_stormdata<-summarize(grouped_stormdata,PROPERTY_LOSS=sum(PROPDMG*Exp_vector_T[PropDmgExp]),CROP_LOSS=sum(CROPDMG*Exp_vector_T[CropDmgExp]))
sum_eco_stormdata<-mutate(sum_eco_stormdata,PROPERTY_LOSS,CROP_LOSS,TOTAL_LOSS=PROPERTY_LOSS+CROP_LOSS)
my_eco_barplot_data<-rbind(sum_eco_stormdata[1:10,]$PROPERTY_LOSS,sum_eco_stormdata[1:10,]$CROP_LOSS)
sum_eco_stormdata<-arrange(sum_eco_stormdata,desc(TOTAL_LOSS))
names(my_eco_barplot_data)<-as.character(sum_eco_stormdata[1:10,]$Event_Type)
par(mar=c(10,5,5,5))
barplot(my_eco_barplot_data,col=c("purple","tomato"),names.arg = as.character(sum_eco_stormdata[1:10,]$Event_Type),las=2,ylim=c(0,60),cex.names=0.8)
Exp_vector_T<-c("D"=0.001/1000000000,"H"=0.1/1000000000,"K"=1/1000000000,"M"=1/1000000,"B"=1/1000)
sum_eco_stormdata<-summarize(grouped_stormdata,PROPERTY_LOSS=sum(PROPDMG*Exp_vector_T[PropDmgExp]),CROP_LOSS=sum(CROPDMG*Exp_vector_T[CropDmgExp]))
sum_eco_stormdata<-arrange(sum_eco_stormdata,desc(TOTAL_LOSS))
sum_eco_stormdata<-mutate(sum_eco_stormdata,PROPERTY_LOSS,CROP_LOSS,TOTAL_LOSS=PROPERTY_LOSS+CROP_LOSS)
my_eco_barplot_data<-rbind(sum_eco_stormdata[1:10,]$PROPERTY_LOSS,sum_eco_stormdata[1:10,]$CROP_LOSS)
names(my_eco_barplot_data)<-as.character(sum_eco_stormdata[1:10,]$Event_Type)
par(mar=c(10,5,5,5))
barplot(my_eco_barplot_data,col=c("purple","tomato"),names.arg = as.character(sum_eco_stormdata[1:10,]$Event_Type),las=2,ylim=c(0,60),cex.names=0.8)
legend("topright",c("Property loss","Crop loss"),fill=c("purple","tomato"))
title(main = "Top 10 Most Destructive Events in USA (by Total Economic Loss )",ylab = "Economic Loss (Triillion Dollars)")
par(mar=c(10,5,5,5))
barplot(my_eco_barplot_data,col=c("purple","tomato"),names.arg = as.character(sum_eco_stormdata[1:10,]$Event_Type),las=2,ylim=c(0,60),cex.names=0.8)
title(main = "Top 10 Most Destructive Events in USA (by Total Economic Loss )",ylab = "Economic Loss (Triillion Dollars)")
sum_eco_stormdata<-summarize(grouped_stormdata,PROPERTY_LOSS=sum(PROPDMG*Exp_vector_T[PropDmgExp]),CROP_LOSS=sum(CROPDMG*Exp_vector_T[CropDmgExp]))
sum_eco_stormdata<-mutate(sum_eco_stormdata,PROPERTY_LOSS,CROP_LOSS,TOTAL_LOSS=PROPERTY_LOSS+CROP_LOSS)
sum_eco_stormdata<-arrange(sum_eco_stormdata,desc(TOTAL_LOSS))
my_eco_barplot_data<-rbind(sum_eco_stormdata[1:10,]$PROPERTY_LOSS,sum_eco_stormdata[1:10,]$CROP_LOSS)
names(my_eco_barplot_data)<-as.character(sum_eco_stormdata[1:10,]$Event_Type)
head(sum_eco_stormdata)
par(mar=c(10,5,5,5))
barplot(my_eco_barplot_data,col=c("purple","tomato"),names.arg = as.character(sum_eco_stormdata[1:10,]$Event_Type),las=2,ylim=c(0,60),cex.names=0.8)
title(main = "Top 10 Most Destructive Events in USA (by Total Economic Loss )",ylab = "Economic Loss (Triillion Dollars)")
legend("topright",c("Property loss","Crop loss"),fill=c("purple","tomato"))
